# Vader tests for quote joining with conjoin.
# Lua uses .. to concatenate strings and doesn't use line continuation, except
# inside strings where \ followed by newline allows multi-line strings without
# removing any leading space and \z removes the next run of whitespace,
# including newlines (handy for keeping long strings indentation-aligned).
# The quote config causes conjoin to move \ and \z continuation characters
# even if they're not inside a string, but since they would be syntax errors
# if left in, this seems reasonable.

Given lua (A multi-line string):
  x = "foo" ..
  "bar" ..
  "baz"

Do (Join first two lines):
  J

Expect lua:
  x = "foobar" ..
  "baz"


Given lua (A multi-line function call):
  print(
  "Lorem "
  .. "ipsum "
    .. "dolor "
    .. "sit "
  	.. "amet"
  )

Do (Join file with visual gJ):
  VGgJ

Expect lua:
  print("Lorem ipsum dolor sit amet")


Given lua (No string concatenation, invalid syntax):
  print(
  "Lorem "
  "ipsum "
    + "dolor " \
    & "sit "
  	^ "amet"
    .. ','
  )

Execute (Join file with Join count):
  Join 8

Expect lua:
  print( "Lorem " "ipsum " + "dolor "   & "sit " ^ "amet" .. ',')


Given lua (Line break escape and skip-space in a string):
  print("Lorem\
      ipsum",
    "dolor \z
      sit " .. "amet")

Do (Join with J count):
  4J

Expect lua:
  print("Lorem    ipsum", "dolor sit " .. "amet")
